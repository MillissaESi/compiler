%{
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
int yyerror();

int ind =1;
int h  , indice ;
char buffer[200];
char *s = "temp";
char temp[200][20];
int j;
char stock[20];
struct squad
{
	int sommet ;
	char squad_struct[200][50];
};
struct squad SQ;
FILE* yyin ;
FILE* yyout ;

%}

%union {
	float fval ;
	char var[200];
	struct $
	{
		  int ival;
	      char tab[250][20];
	}t;
}
%error-verbose
%token <fval> nombre
%token <fval> Somme 
%token <fval> Produit
%token <fval> Moyenne
%token <fval> Variance
%token <fval> Max 
%token <fval> Min
%token <var> Variable
%token <fval> ecartype


%type <var> Ligne
%type <var> Terme 
%type <var> Facteur
%type <var> Expr
%type <var> Fin
%type <var> Fonction
%type <t> L
%type <fval> NomF


%%
Ligne : Expr '\n' {
	for (int i = 0; i < SQ.sommet+1; i++)
	{
		fprintf(yyout,"%s\n",SQ.squad_struct[i]);
	}
	fclose(yyout);
}
;
Expr : Expr '+' Terme {  strcpy($$,temp[ind]);SQ.sommet++;sprintf(SQ.squad_struct[SQ.sommet]," %s =  %s + %s \n",temp[ind],$1, $3);ind++;  }
| Expr '-' Terme {  strcpy($$,temp[ind]); SQ.sommet++;sprintf(SQ.squad_struct[SQ.sommet]," %s =  %s - %s \n",temp[ind],$1, $3); ind++; }
| Terme
;
Terme : Terme '*' Facteur {  strcpy($$,temp[ind]); SQ.sommet++; sprintf(SQ.squad_struct[SQ.sommet]," %s =  %s * %s \n",temp[ind],$1, $3);ind++ ; }
| Terme '/' Facteur {   strcpy($$,temp[ind]); SQ.sommet++;sprintf(SQ.squad_struct[SQ.sommet]," %s =  %s / %s \n",temp[ind],$1, $3);ind++; }
| Facteur
;
Facteur : '-' Facteur  {   strcpy($$,temp[ind]); SQ.sommet++;sprintf(SQ.squad_struct[SQ.sommet]," %s =  - %s \n",temp[ind],$2);  ind++; } 
| Fin
;
Fin : '(' Expr ')' { strcpy($$,$2);}
| Variable { strcpy($$,$1);  }
| Fonction 
;
Fonction : NomF '(' L ')' { 

    int m=$1;
    switch(m) {
    	case 0 : 
    	     for(int i=0 ; i<$3.ival-1 ; i++){
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s \n",temp[ind],$3.tab[i],$3.tab[i+1]);
    	     	strcpy($3.tab[i+1],temp[ind]);ind++; }
    	     	strcpy($$,temp[ind-1]);  
    	        break;
    	case 1 :  
    	     for(int i=0 ; i<$3.ival-1 ; i++){
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s \n",temp[ind],$3.tab[i],$3.tab[i+1]);
    	        strcpy($3.tab[i+1],temp[ind]);
    	     	ind++; } 
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s / %d \n",temp[ind],$3.tab[$3.ival-1], $3.ival);
    	        ind++; 
    	        strcpy($$,temp[ind-1]); 
    	        break;
    	case 2 :
    	        strcpy(stock,$3.tab[1]);
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s \n",temp[ind],$3.tab[0],stock);
    	     	strcpy(stock,temp[ind]);ind++;
                for(int i=2 ; i<$3.ival ; i++){
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s \n",temp[ind],$3.tab[i],stock);
    	     	strcpy(stock,temp[ind]);ind++; } 
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s / %d \n",temp[ind],stock, $3.ival);
    	        char moy[200];
    	        strcpy(moy,temp[ind]);
    	        ind++;
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s - %s \n",temp[ind],$3.tab[0],moy);
    	        ind++;
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s * %s \n",temp[ind],temp[ind-1],temp[ind-1]);
    	        ind++;
                for(int i=1 ; i<$3.ival ; i++){
                SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s - %s \n",temp[ind],$3.tab[i],moy);
    	        ind++;
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s * %s \n",temp[ind],temp[ind-1],temp[ind-1]);
    	        ind++;
    	         SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s \n",temp[ind],temp[ind-1],temp[ind-3]);ind++;	
    	         } 
    	          SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s / %d \n",temp[ind],temp[ind-1], $3.ival);
                ind++;
                strcpy($$,temp[ind-1]);
    	        break;
    	case 3 :
    	        SQ.sommet++;  
    	 		sprintf(SQ.squad_struct[SQ.sommet],"%s = %s  \n",temp[ind],$3.tab[0]);
    	 		ind++; h = ind - 1;
    	 		SQ.sommet++;
    	 		for(int i=1 ; i<$3.ival ; i++){
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s  - %s \n",temp[ind],temp[h],$3.tab[i]);ind++;
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"JG %d", SQ.sommet+3);
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s  \n",temp[h],$3.tab[i]);
    	 		SQ.sommet++;
                }
                strcpy($$,temp[h]);
    	        break;   
    	case 4 :    
    	        SQ.sommet++;    
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s  \n",temp[ind],$3.tab[0]);
    	 		ind++; h = ind - 1;
    	 		SQ.sommet++;
    	 		for(int i=1 ; i<$3.ival ; i++){
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s  - %s \n",temp[ind],temp[h],$3.tab[i]);ind++;
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"JL %d", SQ.sommet+3);
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s  \n",temp[h],$3.tab[i]);
    	 		SQ.sommet++;
                }
                strcpy($$,temp[h]);
    	        break;   
    	case 6 : 
    			strcpy(stock,$3.tab[1]);
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s \n",temp[ind],$3.tab[0],stock);
    	     	strcpy(stock,temp[ind]);ind++;
                for(int i=2 ; i<$3.ival ; i++){
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s \n",temp[ind],$3.tab[i],stock);
    	     	strcpy(stock,temp[ind]);ind++; } 
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s / %d \n",temp[ind],stock, $3.ival);
    	        strcpy(moy,temp[ind]);
    	        ind++;
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s - %s \n",temp[ind],$3.tab[0],moy);
    	        ind++;
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s * %s \n",temp[ind],temp[ind-1],temp[ind-1]);
    	        ind++;
                for(int i=1 ; i<$3.ival ; i++){
                SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s - %s \n",temp[ind],$3.tab[i],moy);
    	        ind++;
    	        SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s * %s \n",temp[ind],temp[ind-1],temp[ind-1]);
    	        ind++;
    	         SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s \n",temp[ind],temp[ind-1],temp[ind-3]);ind++;	
    	         } 
    	          SQ.sommet++;
    	        sprintf(SQ.squad_struct[SQ.sommet]," %s = %s / %d \n",temp[ind],temp[ind-1], $3.ival);
                ind++;
                SQ.sommet++;
                strcpy($$,temp[ind-1]);
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s",temp[ind],temp[ind-1]);int a=ind-1;int x=ind ;ind++;
                   SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s * %s ",temp[ind],temp[ind-1],temp[ind-1]);ind++;
                  int quadcourant = SQ.sommet+1;
                  SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s - %s ",temp[ind],temp[ind-1],temp[a]);ind++;
                 SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s - 0.00001 ",temp[ind],temp[ind-1]);ind++;
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"JLE %d",SQ.sommet+6);
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s / %s ",temp[ind],temp[a],temp[x]);ind++;
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"%s = %s + %s ",temp[ind],temp[ind-1],temp[x]);ind++;
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"%s = 0.5 * %s ",temp[ind],temp[ind-1]);x=ind;ind++;
                SQ.sommet++;
                sprintf(SQ.squad_struct[SQ.sommet],"JMP %d",quadcourant);
                SQ.sommet++;
    			break;     
    	
    	default : break;
    }
	
}
;
NomF : Somme { $$ = 0; }
| Moyenne {$$=1;}
| Variance {$$=2;}
| Min {$$=3;}
| Max {$$=4;}
| Produit {$$=5;}
| ecartype {$$=6;}
;

L : L ',' Expr  {strcpy($$.tab[$$.ival],$3); $$.ival++; } 
| Expr  { $$.ival=0; strcpy($$.tab[$$.ival],$1); $$.ival++;}
;




%%
int main() {
	for(int l=0;l<200;l++){
			j=snprintf(buffer, 6, "%s", s) ;
	    	j += snprintf(buffer+j, 6, "%d ", l);
	    	strcpy(temp[l],buffer);
		}
	// initialiser squad 
	SQ.sommet=-1;	
	// entrer depuis un fichier 
	yyin=fopen("entrer.txt","r");
    yyout= fopen("sortie.txt","w");
	yyparse();
    fclose(yyin);}

int yyerror(const char * s) {
    printf("%s\n",s);
}
 
